<html >
<head>
   <meta charset="utf-8">
   <!-- Latest compiled and minified CSS -->
   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
   <!-- jQuery library -->
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
   <!-- Latest compiled JavaScript -->
   <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
   <title>Project IoT -- CAN Arduino </title>
   <!-- TESTING SERIAL PORT-->
   <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.min.js"></script>
   <script src="socket.io/socket.io.js"></script>
   <script src="https://cdn.zingchart.com/zingchart.min.js"></script>
   <script src="http://cdn.zingchart.com/angular/zingchart-angularjs.js"></script>
   
   
   <!-- SPEEDOMETER-->
 	<link href="css/speedometer.css" rel="stylesheet">
 	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
	<script src="js/speedometer.js"></script>
 
   
    <link rel='stylesheet' href='http://fonts.googleapis.com/css?family=Play:700,400' type='text/css'>
    
       <script type="text/javascript" src="http://iop.io/js/vendor/d3.v3.min.js"></script>
       <script type="text/javascript" src="http://iop.io/js/vendor/polymer/PointerEvents/pointerevents.js"></script>
       <script type="text/javascript" src="http://iop.io/js/vendor/polymer/PointerGestures/pointergestures.js"></script>
       <script type="text/javascript" src="http://iop.io/js/iopctrl.js"></script>
   
	
   <script>
		
      var app = angular.module('myApp', ['zingchart-angularjs']);
      var socket = io();
	  var rpm;
      
      app.controller('appCltr', ['$scope',function($scope){
      
	  
	  
		  $scope.myJson = {
		      type : 'line',
		      series : [
		        { values : [0,100] },
		        { values : [0,100] }
		      ]
		  };
	  
	  
	  $scope.graph=[0,10];
	  
      	socket.on('port', function(port){
      		$scope.$apply(function(){
      		$scope.data = port;
      		console.log(port);
      		});
      	});
      	
      	socket.on('engine', function(engine){
      		$scope.$apply(function(){
      		$scope.engine = engine;
			rpm=engine[0].value;
			
			
			//ShowClusterRPm
            segDisplay.value(rpm/10);
            gauge.value(rpm/10);
			
			
			
			graphupdate(engine[0].value,engine[1].value);
      		console.log(engine);
      		});
      	});
		
		function graphupdate(data,tempdata){
			$scope.myJson.series[0].values.push(data/100);
			$scope.myJson.series[1].values.push(tempdata);
		}
		

      }]);
	  
   </script>         
	  
	 
</head>
<body>
   <!-- Header -->
   <div class="container">
      <div class="row">
         <div class="col-md-12 col-xs-6 bg-info" style="text-align:center">
            <h1 ><%=title%></h1>
         </div>
      </div>
   </div>
   <!-- Dropdown um Steuergerät auszuwählen -->
   <div class="dropdown">
      <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">Steuergerätauswahl
      <span class="caret"></span></button>
      <ul class="dropdown-menu">
         <% nodes.forEach(function(nodes) { %>
         <button id='<%= nodes.id %>'  onclick="window.location.href='http://localhost:3000/<%= nodes.name %>'">
            <img src= '/icons/<%= nodes.pic %>.png' width="100" height="100" >
            <li ><a><%= nodes.name %> 
               >> ID: <%=nodes.id %></a>
            </li>
         </button>
         <% }); %>
      </ul>
   </div>
   <!-- Hauptteil der Daten verarbeitet -->
   
   
   
   
   
   
   
   
   
  <div>
        <span id="speedometerrpm"></span>
    </div>
		
			  
			  
			  
	
   
   
   
   
     
   
 <div class="container"  ng-controller="appCltr" ng-app="myApp" >
	   
	         <div class="row">
         <div class="col-md-12">
            <h1><strong> AUSGABEBEREICH</strong></h1>
         </div>
      </div>
      <div class="row">
         <div class="col-sm-6" style="height: 300px">
            <div class="tile purple">
               <h3 class="title">Informationen über das Node</h3>
               <p><%=nodes[0].name %> mit der ID= <%=nodes[0].id %></p>
               <p>Motorsteuergerät</p>
               <p>  <%= enginedata[3].name %> = <%= enginedata[3].value %>  </p>
               <!--   Verändert sich nicht daher ExpressJS-->
               <p>  {{engine[0].name}} =  {{engine[0].value}}   </p>
               <!--SocketLiveDaten-->
               <p>  {{engine[1].name}} =  {{engine[1].value}} in ° Celsius  </p>
               <!--SocketLiveDaten-->
               <p>  {{engine[2].name}} = Engine running? =  {{engine[2].value}} </p>
               <!--SocketLiveDaten-->
            </div>
         </div>
         <div  class="col-sm-6" style="height: 300px">
            <div class="tile red">
               <h3 class="title">RawDaten.</h3>
               <p>Unverarbeitete Daten.</p>
               <p>  {{data}}   </p>
               <p> </P>
            </div>
         </div>
      </div>
      <div class="row">
         <div class="col-sm-6" style="height: 300px">
            <div class="tile green">
               <h3 class="title">LiveDaten</h3>
               <p>Verarbeitete Raw Daten.</p>
               <p>Für dieses Steuergerät relevante Daten = {{data.substring(0,6)}}</p>
            </div>
         </div>
         <div>
            <div class="col-sm-6" style="height: 300px" >
               <div class="tile orange">
                  <h3 class="title">Diagramm</h3>
                  <p>Daten im Diagramm anzeigen.</p>
		   	   <div class="col-sm-6" style="height: 300px" >
		   		  <p>TESTGRAPH</p>
				  <zingchart id="myChart" zc-json="myJson" zc-height=500 zc-width=600></zingchart>
		   	   </div>
               </div>
            </div>
         </div>
		 
		 
		 
        
		
		
		
		
         </div>
		 
		 
         
	  
	  
	  
	  
	  
	  
	  
   </div> 
   
   
   
   
   </div>
   
   
   
   
 
   
   
   
   
 
 
  <script>
          var svg = d3.select("#speedometerrpm")
                  .append("svg:svg")
                  .attr("width", 400)
                  .attr("height", 400)
	  .attr('style',  'background-color:#515151');


          var gauge = iopctrl.arcslider()
                  .radius(120)
                  .events(false)
                  .indicator(iopctrl.defaultGaugeIndicator);
          gauge.axis().orient("in")
                  .normalize(true)
                  .ticks(12)
                  .tickSubdivide(3)
                  .tickSize(10, 8, 10)
                  .tickPadding(5)
                  .scale(d3.scale.linear()
                          .domain([0, 6000])
                          .range([-3*Math.PI/4, 3*Math.PI/4]));

          var segDisplay = iopctrl.segdisplay()
                  .width(80)
                  .digitCount(6)
                  .negative(false)
                  .decimals(0);

          svg.append("g")
                  .attr("class", "segdisplay")
                  .attr("transform", "translate(130, 200)")
                  .call(segDisplay);

          svg.append("g")
                  .attr("class", "gauge")
                  .call(gauge);

          
    
      </script>

   
</body>




 
</html>